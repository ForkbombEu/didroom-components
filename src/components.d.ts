/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Color, Shape, Size } from "./components/types";
export { Color, Shape, Size } from "./components/types";
export namespace Components {
    interface DAvatar {
        "name"?: string;
        "shape"?: Shape;
        "size"?: Size;
        "src"?: string;
    }
    interface DButton {
        "color"?: Color;
        "disabled"?: boolean;
        "href"?: string;
    }
    interface DCredentialCard {
        "description"?: string;
        "expirationDate"?: string;
        "issuer": string;
        "logoSrc"?: string;
        "name": string;
        "verified"?: boolean;
    }
    interface DCredentialOffer {
        "description"?: string;
        "issuer": string;
        "logoSrc"?: string;
        "longDescription"?: string;
        "name": string;
    }
    interface DCredentialService {
        "description"?: string;
        "href"?: string;
        "issuer": string;
        "logoSrc"?: string;
        "name": string;
    }
    interface DDefinition {
        "definition": string;
        "title": string;
    }
    interface DHeading {
        "color": Color;
        "size": Size;
    }
    interface DText {
        "color": Color;
        "size": Size;
    }
}
declare global {
    interface HTMLDAvatarElement extends Components.DAvatar, HTMLStencilElement {
    }
    var HTMLDAvatarElement: {
        prototype: HTMLDAvatarElement;
        new (): HTMLDAvatarElement;
    };
    interface HTMLDButtonElement extends Components.DButton, HTMLStencilElement {
    }
    var HTMLDButtonElement: {
        prototype: HTMLDButtonElement;
        new (): HTMLDButtonElement;
    };
    interface HTMLDCredentialCardElement extends Components.DCredentialCard, HTMLStencilElement {
    }
    var HTMLDCredentialCardElement: {
        prototype: HTMLDCredentialCardElement;
        new (): HTMLDCredentialCardElement;
    };
    interface HTMLDCredentialOfferElement extends Components.DCredentialOffer, HTMLStencilElement {
    }
    var HTMLDCredentialOfferElement: {
        prototype: HTMLDCredentialOfferElement;
        new (): HTMLDCredentialOfferElement;
    };
    interface HTMLDCredentialServiceElement extends Components.DCredentialService, HTMLStencilElement {
    }
    var HTMLDCredentialServiceElement: {
        prototype: HTMLDCredentialServiceElement;
        new (): HTMLDCredentialServiceElement;
    };
    interface HTMLDDefinitionElement extends Components.DDefinition, HTMLStencilElement {
    }
    var HTMLDDefinitionElement: {
        prototype: HTMLDDefinitionElement;
        new (): HTMLDDefinitionElement;
    };
    interface HTMLDHeadingElement extends Components.DHeading, HTMLStencilElement {
    }
    var HTMLDHeadingElement: {
        prototype: HTMLDHeadingElement;
        new (): HTMLDHeadingElement;
    };
    interface HTMLDTextElement extends Components.DText, HTMLStencilElement {
    }
    var HTMLDTextElement: {
        prototype: HTMLDTextElement;
        new (): HTMLDTextElement;
    };
    interface HTMLElementTagNameMap {
        "d-avatar": HTMLDAvatarElement;
        "d-button": HTMLDButtonElement;
        "d-credential-card": HTMLDCredentialCardElement;
        "d-credential-offer": HTMLDCredentialOfferElement;
        "d-credential-service": HTMLDCredentialServiceElement;
        "d-definition": HTMLDDefinitionElement;
        "d-heading": HTMLDHeadingElement;
        "d-text": HTMLDTextElement;
    }
}
declare namespace LocalJSX {
    interface DAvatar {
        "name"?: string;
        "shape"?: Shape;
        "size"?: Size;
        "src"?: string;
    }
    interface DButton {
        "color"?: Color;
        "disabled"?: boolean;
        "href"?: string;
    }
    interface DCredentialCard {
        "description"?: string;
        "expirationDate"?: string;
        "issuer"?: string;
        "logoSrc"?: string;
        "name"?: string;
        "verified"?: boolean;
    }
    interface DCredentialOffer {
        "description"?: string;
        "issuer"?: string;
        "logoSrc"?: string;
        "longDescription"?: string;
        "name"?: string;
    }
    interface DCredentialService {
        "description"?: string;
        "href"?: string;
        "issuer"?: string;
        "logoSrc"?: string;
        "name"?: string;
    }
    interface DDefinition {
        "definition"?: string;
        "title"?: string;
    }
    interface DHeading {
        "color"?: Color;
        "size"?: Size;
    }
    interface DText {
        "color"?: Color;
        "size"?: Size;
    }
    interface IntrinsicElements {
        "d-avatar": DAvatar;
        "d-button": DButton;
        "d-credential-card": DCredentialCard;
        "d-credential-offer": DCredentialOffer;
        "d-credential-service": DCredentialService;
        "d-definition": DDefinition;
        "d-heading": DHeading;
        "d-text": DText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "d-avatar": LocalJSX.DAvatar & JSXBase.HTMLAttributes<HTMLDAvatarElement>;
            "d-button": LocalJSX.DButton & JSXBase.HTMLAttributes<HTMLDButtonElement>;
            "d-credential-card": LocalJSX.DCredentialCard & JSXBase.HTMLAttributes<HTMLDCredentialCardElement>;
            "d-credential-offer": LocalJSX.DCredentialOffer & JSXBase.HTMLAttributes<HTMLDCredentialOfferElement>;
            "d-credential-service": LocalJSX.DCredentialService & JSXBase.HTMLAttributes<HTMLDCredentialServiceElement>;
            "d-definition": LocalJSX.DDefinition & JSXBase.HTMLAttributes<HTMLDDefinitionElement>;
            "d-heading": LocalJSX.DHeading & JSXBase.HTMLAttributes<HTMLDHeadingElement>;
            "d-text": LocalJSX.DText & JSXBase.HTMLAttributes<HTMLDTextElement>;
        }
    }
}
